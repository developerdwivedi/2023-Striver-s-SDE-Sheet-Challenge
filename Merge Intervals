#include <bits/stdc++.h>

 

struct Element {

int value;

int index;

};

 

bool cmp(const Element& a, const Element& b) {

return a.value < b.value;

}

 

vector<vector<int>> mergeIntervals(vector<vector<int>> &intervals)

{

int n = intervals.size();

 

Element elements[n];

for(int i = 0; i < n; i++) {

elements[i].value = intervals[i][0];

elements[i].index = intervals[i][1];

}

sort(elements, elements+n, cmp);

 

vector<vector<int>> ans;

int s = elements[0].value, e = elements[0].index;

for(int i = 1; i < intervals.size(); i++){

 

if(elements[i].value <= e){

e = max(elements[i].index, e);

} else {

ans.push_back({s,e});

s = elements[i].value;

e = elements[i].index;

}

}

ans.push_back({s,e});

return ans;

}
